openapi: "3.0.0"
info:
  description: "CRUD API configurator service allows users to create and configure simple CRUD API schemas."
  version: "1.0.0"
  title: "API config service"
paths:
  /ping:
    get:
      responses:
        "200":
          description: Server is up.
        "500":
          description: Something is wrong.

  /api/v1/api-config/create:
    post:
      parameters:
        - name: user
          description: TODO delete after auth implementation
          in: query
          required: true
          schema:
            type: string
      requestBody:
        content:
          'application/json':
            schema:
              type: object
              required:
                - schema
              properties:
                schema:
                  $ref: "#/components/schemas/ApiSchemaInput"
      responses:
        "200":
          description: Config was succesfully added.
          content:
            'application/json':
              schema:
                type: object
                properties:
                  schema:
                    $ref: "#/components/schemas/ApiSchema"
        "404":
          description: Bad request.
          content:
            'application/json':
              schema:
                $ref: "#/components/schemas/ErrorReponse"

  /api/v1/api-config/update:
    post:
      parameters:
        - name: user
          description: TODO delete after auth implementation
          in: query
          required: true
          schema:
            type: string
      requestBody:
        content:
          'application/json':
            schema:
              type: object
              required:
                - id
                - schema
              properties:
                id:
                  type: int
                schema:
                  $ref: "#/components/schemas/ApiSchemaInput"
      responses:
        "200":
          description: Config was succesfully updated.
          content:
            'application/json':
              schema:
                type: object
                properties:
                  schema:
                    $ref: "#/components/schemas/ApiSchema"
        "400":
          description: Not found.
          content:
            'application/json':
              schema:
                $ref: "#/components/schemas/ErrorReponse"
        "404":
          description: Bad request.
          content:
            'application/json':
              schema:
                $ref: "#/components/schemas/ErrorReponse"

  /api/v1/api-config/delete:
    post:
      parameters:
        - name: user
          description: TODO delete after auth implementation
          in: query
          required: true
          schema:
            type: string
        - name: id
          in: query
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Config was succesfully deleted.
          content:
            'application/json':
              schema:
                type: object
                properties:
                  schema:
                    $ref: "#/components/schemas/ApiSchema"
        "400":
          description: Not found.
          content:
            'application/json':
              schema:
                $ref: "#/components/schemas/ErrorReponse"
        "404":
          description: Bad request.
          content:
            'application/json':
              schema:
                $ref: "#/components/schemas/ErrorReponse"

  /api/v1/api-config/get:
    get:
      parameters:
        - name: user
          description: TODO delete after auth implementation
          in: query
          required: true
          schema:
            type: string
        - name: id
          in: query
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Config exists.
          content:
            'application/json':
              schema:
                type: object
                properties:
                  schema:
                    $ref: "#/components/schemas/ApiSchema"
        "400":
          description: Not found.
          content:
            'application/json':
              schema:
                $ref: "#/components/schemas/ErrorReponse"
        "404":
          description: Bad request.
          content:
            'application/json':
              schema:
                $ref: "#/components/schemas/ErrorReponse"
                
  /api/v1/api-config/list:
    get:
      parameters:
        - name: user
          description: TODO delete after auth implementation
          in: query
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Config was succesfully added.
          content:
            'application/json':
              schema:
                type: object
                required:
                  - items
                properties:
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/ApiSchema"
        "404":
          description: Bad request.
          content:
            'application/json':
              schema:
                $ref: "#/components/schemas/ErrorReponse"
          
components:
  schemas:
    ErrorReponse:
      type: object
      required:
        - message
      properties:
        message:
          type: string
          
    ApiSchemaInput:
      type: object
      required:
        - name
        - schema
      properties:
        name:
          type: string
        description:
          type: string
        schema:
          type: object
          
    ApiSchema:
      type: object
      required:
        - id
        - author
        - created
        - updated
        - name
        - schema
      properties:
        id:
          type: integer
        author:
          type: string
        created:
          type: string
        updated:
          type: string
        name:
          type: string
        descsription:
          type: string
        schema:
          type: object
  